name: Auto Release on Main Merge

on:
  push:
    branches:
      - main

jobs:
  create-release:
    name: Create Minor Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get Current Version Tag
        id: get_version
        run: |
          # Check if there are any tags in the repository
          if git describe --tags $(git rev-list --tags --max-count=1) >/dev/null 2>&1; then
            # Get the latest tag
            latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          else
            # Default to v0.0.0 if no tags exist
            latest_tag="v0.0.0"
          fi

          echo "Latest tag: $latest_tag"

          # Extract major and minor versions
          major=$(echo "$latest_tag" | cut -d. -f1 | cut -dv -f2)
          minor=$(echo "$latest_tag" | cut -d. -f2)
          patch=$(echo "$latest_tag" | cut -d. -f3)

          # Increment minor version
          minor=$((minor + 1))

          # Set new tag
          new_tag="v${major}.${minor}.0"
          echo "New tag: $new_tag"

          echo "latest_tag=$latest_tag" >> $GITHUB_ENV
          echo "new_tag=$new_tag" >> $GITHUB_ENV

      - name: Create New Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Creating release $new_tag"

          # Push the new tag
          git tag "$new_tag"
          git push origin "$new_tag"

          # Create a GitHub release
          gh release create "$new_tag" \
            --title "$new_tag" \
            --notes "Automated release for changes merged into main."
